Coverage Report by instance with details

=================================================================================
=== Instance: /\Async_FIFO_tb#Async_FIFO_instance 
=== Design Unit: work.Async_FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20        20         0   100.00%

================================Branch Details================================

Branch Coverage for instance /\Async_FIFO_tb#Async_FIFO_instance 

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Async_FIFO.v
------------------------------------IF Branch------------------------------------
    27                                        14     Count coming in to IF
    27              1                          2     	if(!rst_n) begin
    30              1                          8     	else if(wr_en == 1 && full == 0) begin
                                               4     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                        18     Count coming in to IF
    38              1                          2     	if(!rst_n) begin
    42              1                          8     	else if(rd_en == 1 && empty == 0) begin
                                               8     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                        11     Count coming in to IF
    60              1                          2     	if (!rst_n) begin
    64              1                          9     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                        16     Count coming in to IF
    72              1                          2     	if (!rst_n) begin
    76              1                         14     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                        17     Count coming in to IF
    83              1                          1     assign full = ((wr_ptr_gray[ADDR_SIZE-2:0] == rd_ptr_sync1[ADDR_SIZE-2:0]) && (wr_ptr_gray[ADDR_SIZE-1] != rd_ptr_sync1[ADDR_SIZE-1]) && (wr_ptr_gray[ADDR_SIZE] != rd_ptr_sync1[ADDR_SIZE])) ? 1 : 0;
    83              2                         16     assign full = ((wr_ptr_gray[ADDR_SIZE-2:0] == rd_ptr_sync1[ADDR_SIZE-2:0]) && (wr_ptr_gray[ADDR_SIZE-1] != rd_ptr_sync1[ADDR_SIZE-1]) && (wr_ptr_gray[ADDR_SIZE] != rd_ptr_sync1[ADDR_SIZE])) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                        15     Count coming in to IF
    84              1                          2     assign empty = (wr_ptr_sync1 == rd_ptr_gray) ? 1 : 0;
    84              2                         13     assign empty = (wr_ptr_sync1 == rd_ptr_gray) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                         8     Count coming in to IF
    88              1                          2     	if(!rst_n)
    90              1                          2     	else if (full == 1 && wr_en == 1)
    92              1                          4     	else 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    98                                         7     Count coming in to IF
    98              1                          2     	if(!rst_n)
    100             1                          2     	else if (empty == 1 && rd_en == 1)
    102             1                          3     	else 
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12        12         0   100.00%

================================Condition Details================================

Condition Coverage for instance /\Async_FIFO_tb#Async_FIFO_instance  --

  File Async_FIFO.v
----------------Focused Condition View-------------------
Line       30 Item    1  (wr_en && ~full)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       wr_en         Y
        full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  wr_en_0               -                             
  Row   2:          1  wr_en_1               ~full                         
  Row   3:          1  full_0                wr_en                         
  Row   4:          1  full_1                wr_en                         

----------------Focused Condition View-------------------
Line       42 Item    1  (rd_en && ~empty)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               ~empty                        
  Row   3:          1  empty_0               rd_en                         
  Row   4:          1  empty_1               rd_en                         

----------------Focused Condition View-------------------
Line       83 Item    1  (((wr_ptr_gray[1:0] == rd_ptr_sync1[1:0]) && (wr_ptr_gray[2] != rd_ptr_sync1[2])) && (wr_ptr_gray[3] != rd_ptr_sync1[3]))
Condition totals: 3 of 3 input terms covered = 100.00%

                               Input Term   Covered  Reason for no coverage   Hint
                              -----------  --------  -----------------------  --------------
  (wr_ptr_gray[1:0] == rd_ptr_sync1[1:0])         Y
      (wr_ptr_gray[2] != rd_ptr_sync1[2])         Y
      (wr_ptr_gray[3] != rd_ptr_sync1[3])         Y

     Rows:       Hits  FEC Target                                 Non-masking condition(s)      
 ---------  ---------  --------------------                       -------------------------     
  Row   1:          1  (wr_ptr_gray[1:0] == rd_ptr_sync1[1:0])_0  -                             
  Row   2:          1  (wr_ptr_gray[1:0] == rd_ptr_sync1[1:0])_1  ((wr_ptr_gray[3] != rd_ptr_sync1[3]) && (wr_ptr_gray[2] != rd_ptr_sync1[2]))
  Row   3:          1  (wr_ptr_gray[2] != rd_ptr_sync1[2])_0      (wr_ptr_gray[1:0] == rd_ptr_sync1[1:0])
  Row   4:          1  (wr_ptr_gray[2] != rd_ptr_sync1[2])_1      ((wr_ptr_gray[3] != rd_ptr_sync1[3]) && (wr_ptr_gray[1:0] == rd_ptr_sync1[1:0]))
  Row   5:          1  (wr_ptr_gray[3] != rd_ptr_sync1[3])_0      ((wr_ptr_gray[1:0] == rd_ptr_sync1[1:0]) && (wr_ptr_gray[2] != rd_ptr_sync1[2]))
  Row   6:          1  (wr_ptr_gray[3] != rd_ptr_sync1[3])_1      ((wr_ptr_gray[1:0] == rd_ptr_sync1[1:0]) && (wr_ptr_gray[2] != rd_ptr_sync1[2]))

----------------Focused Condition View-------------------
Line       84 Item    1  (wr_ptr_sync1 == rd_ptr_gray)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (wr_ptr_sync1 == rd_ptr_gray)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (wr_ptr_sync1 == rd_ptr_gray)_0  -                             
  Row   2:          1  (wr_ptr_sync1 == rd_ptr_gray)_1  -                             

----------------Focused Condition View-------------------
Line       90 Item    1  (full && wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        full         Y
       wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  full_0                -                             
  Row   2:          1  full_1                wr_en                         
  Row   3:          1  wr_en_0               full                          
  Row   4:          1  wr_en_1               full                          

----------------Focused Condition View-------------------
Line       100 Item    1  (empty && rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       empty         Y
       rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  empty_0               -                             
  Row   2:          1  empty_1               rd_en                         
  Row   3:          1  rd_en_0               empty                         
  Row   4:          1  rd_en_1               empty                         


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      33        33         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\Async_FIFO_tb#Async_FIFO_instance  --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Async_FIFO.v
    1                                                module Async_FIFO (data_in,wr_en,rd_en,clk_wr,clk_rd,rst_n,data_out,full,empty,overflow,underflow);
    2                                                
    3                                                // Parameters Declaration
    4                                                parameter FIFO_WIDTH = 4;						 // Size of each word stored in the FIFO
    5                                                parameter FIFO_DEPTH = 8;                   	// There are 8 locations in the FIFO   
    6                                                localparam ADDR_SIZE = $clog2(FIFO_DEPTH); 
    7                                                
    8                                                // Inputs & Outputs Declaration
    9                                                input clk_wr,clk_rd,rst_n;          		 // There are two clocks one for reading & the other for writing
    10                                               input wr_en,rd_en;							// Write and read enable for both Domains
    11                                               input [FIFO_WIDTH-1:0] data_in;
    12                                               output reg [FIFO_WIDTH-1:0] data_out;             
    13                                               output full,empty;
    14                                               output reg overflow,underflow; 
    15                                               
    16                                               // Internal signals Declaration 
    17                                               reg [ADDR_SIZE:0] wr_ptr,rd_ptr;                   // we add extra bit to distinguish between the full & empty cases
    18                                               reg [ADDR_SIZE:0] wr_ptr_sync0,wr_ptr_sync1;      // write pointer after passing the 2FF synchronizer (0 --> output of first FF & 1 --> output of second FF)
    19                                               reg [ADDR_SIZE:0] rd_ptr_sync0,rd_ptr_sync1;     // read pointer after passing the 2FF synchronizer (0 --> output of first FF & 1 --> output of second FF)
    20                                               reg [ADDR_SIZE:0] wr_ptr_gray,rd_ptr_gray;      //  They are the gray coding version of read & write pointers 
    21                                               
    22                                               // FIFO memory Declaration
    23                                               reg [FIFO_WIDTH-1:0] FIFO [0:FIFO_DEPTH-1];
    24                                               
    25                                               // Always block for writing operation
    26              1                         14     always @(posedge clk_wr or negedge rst_n) begin
    27                                               	if(!rst_n) begin
    28              1                          2     		wr_ptr <= 0;
    29                                               	end
    30                                               	else if(wr_en == 1 && full == 0) begin
    31              1                          8     		FIFO[wr_ptr[ADDR_SIZE-1:0]] <= data_in;
    32              1                          8     		wr_ptr <= wr_ptr + 1;
    33                                               	end
    34                                               end
    35                                               
    36                                               // Always block for reading operation
    37              1                         18     always @(posedge clk_rd or negedge rst_n) begin
    38                                               	if(!rst_n) begin
    39              1                          2     		data_out <= 0;
    40              1                          2     		rd_ptr <= 0;
    41                                               	end
    42                                               	else if(rd_en == 1 && empty == 0) begin
    43              1                          8     		data_out <= FIFO[rd_ptr[ADDR_SIZE-1:0]];
    44              1                          8     		rd_ptr <= rd_ptr + 1;
    45                                               	end
    46                                               end
    47                                               
    48                                               // Always block for converting binary coding read pointer into gray coding to avoid Data Incoherancy issue
    49              1                          9     always @ (rd_ptr) begin
    50              1                          9     	rd_ptr_gray = (rd_ptr >> 1) ^ rd_ptr;
    51                                               end
    52                                               
    53                                               // Always block for converting binary coding write pointer into gray coding to avoid Data Incoherancy issue
    54              1                          9     always @ (wr_ptr) begin
    55              1                          9     	wr_ptr_gray = (wr_ptr >> 1) ^ wr_ptr;
    56                                               end
    57                                               
    58                                               // Synchronizer for the write pointer after passing read domain (Empty case)
    59              1                         11     always @(posedge clk_rd or negedge rst_n) begin
    60                                               	if (!rst_n) begin
    61              1                          2     		wr_ptr_sync0 <= 0;
    62              1                          2     		wr_ptr_sync1 <= 0;
    63                                               	end
    64                                               	else begin
    65              1                          9     		wr_ptr_sync0 <= wr_ptr_gray;
    66              1                          9     		wr_ptr_sync1 <= wr_ptr_sync0;
    67                                               	end
    68                                               end
    69                                               
    70                                               // Synchronizer for the read pointer after passing write domain (Full case)
    71              1                         16     always @(posedge clk_wr or negedge rst_n) begin
    72                                               	if (!rst_n) begin
    73              1                          2     		rd_ptr_sync0 <= 0;
    74              1                          2     		rd_ptr_sync1 <= 0;
    75                                               	end
    76                                               	else begin
    77              1                         14     		rd_ptr_sync0 <= rd_ptr_gray;
    78              1                         14     		rd_ptr_sync1 <= rd_ptr_sync0;
    79                                               	end
    80                                               end
    81                                               
    82                                               // Continous assignment for the combinational outputs (full & empty signals)
    83              1                         19     assign full = ((wr_ptr_gray[ADDR_SIZE-2:0] == rd_ptr_sync1[ADDR_SIZE-2:0]) && (wr_ptr_gray[ADDR_SIZE-1] != rd_ptr_sync1[ADDR_SIZE-1]) && (wr_ptr_gray[ADDR_SIZE] != rd_ptr_sync1[ADDR_SIZE])) ? 1 : 0;
    84              1                         17     assign empty = (wr_ptr_sync1 == rd_ptr_gray) ? 1 : 0;
    85                                               
    86                                               // Always block for the sequential output (overflow)
    87              1                          8     always @(posedge clk_wr or negedge rst_n) begin
    88                                               	if(!rst_n)
    89              1                          2     		overflow <= 0;
    90                                               	else if (full == 1 && wr_en == 1)
    91              1                          2     		overflow <= 1;
    92                                               	else 
    93              1                          4     		overflow <= 0;
    94                                               end
    95                                               
    96                                               // Always block for the sequential output (underflow)
    97              1                          7     always @(posedge clk_rd or negedge rst_n) begin
    98                                               	if(!rst_n)
    99              1                          2     		underflow <= 0;
    100                                              	else if (empty == 1 && rd_en == 1)
    101             1                          2     		underflow <= 1;
    102                                              	else 
    103             1                          3     		underflow <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         98        81        17    82.65%

================================Toggle Details================================

Toggle Coverage for instance /\Async_FIFO_tb#Async_FIFO_instance  --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            clk_rd           1           1      100.00 
                                            clk_wr           1           1      100.00 
                                      data_in[0-3]           1           1      100.00 
                                     data_out[3-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           0           1       50.00 
                                         rd_ptr[3]           0           1       50.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                  rd_ptr_gray[3-2]           0           1       50.00 
                                  rd_ptr_gray[1-0]           1           1      100.00 
                                 rd_ptr_sync0[3-2]           0           1       50.00 
                                 rd_ptr_sync0[1-0]           1           1      100.00 
                                 rd_ptr_sync1[3-2]           0           1       50.00 
                                 rd_ptr_sync1[1-0]           1           1      100.00 
                                             rst_n           0           1       50.00 
                                         underflow           0           1       50.00 
                                             wr_en           1           1      100.00 
                                         wr_ptr[3]           0           1       50.00 
                                       wr_ptr[2-0]           1           1      100.00 
                                  wr_ptr_gray[3-2]           0           1       50.00 
                                  wr_ptr_gray[1-0]           1           1      100.00 
                                 wr_ptr_sync0[3-2]           0           1       50.00 
                                 wr_ptr_sync0[1-0]           1           1      100.00 
                                 wr_ptr_sync1[3-2]           0           1       50.00 
                                 wr_ptr_sync1[1-0]           1           1      100.00 

Total Node Count     =         49 
Toggled Node Count   =         32 
Untoggled Node Count =         17 

Toggle Coverage      =      82.65% (81 of 98 bins)


Total Coverage By Instance (filtered view): 95.66%

